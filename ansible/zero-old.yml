---
- name: "configure zero client"
  hosts: localhost
  connection: local
  gather_facts: yes
  vars:
    gitpath: https://raw.githubusercontent.com/techno-link/zero-client/master/

  handlers:
    - name: Reload systemd and restart getty@tty1
      ansible.builtin.systemd:
        daemon_reload: yes
        name: getty@tty1
        state: restarted

    - name: Reload systemd
      ansible.builtin.systemd:
        daemon_reload: yes


  tasks:


    #     # INSTALL XORG AND Fluxbox
    #    - name: install xorg
    #      apt:
    #        name:
    #          - xserver-xorg
    #          - x11-xserver-utils
    #          - xinit
    #          - xorg
    #          - compton
    #        state: latest
    #        install_recommends: no

    - name: create config directory for zero
      file:
        path: /home/zero/.config
        state: directory
        owner: zero
        group: zero

    - name: create config directory for fluxbox
      file:
        path: /home/zero/.fluxbox
        state: directory
        owner: zero
        group: zero

    - name: get fluxbox apps file
      get_url:
        url: "{{gitpath}}fluxbox/apps"
        dest: /home/zero/.fluxbox/apps
        force: yes
        owner: zero
        group: zero

    - name: get fluxbox init file
      get_url:
        url: "{{gitpath}}fluxbox/init"
        dest: /home/zero/.fluxbox/init
        force: yes
        owner: zero
        group: zero

    - name: get fluxbox keys file
      get_url:
        url: "{{gitpath}}fluxbox/keys"
        dest: /home/zero/.fluxbox/keys
        force: yes
        owner: zero
        group: zero

    - name: update keys file add CtlAltTab
      lineinfile:
        path: /home/zero/.fluxbox/keys
        line: "Control Mod1 Tab :NextWindow {groups} (workspace=[current])"
        state: present

    - name: get fluxbox menu file
      get_url:
        url: "{{gitpath}}fluxbox/menu"
        dest: /home/zero/.fluxbox/menu
        force: yes
        owner: zero
        group: zero

    - name: get fluxbox startup file
      get_url:
        url: "{{gitpath}}fluxbox/startup"
        dest: /home/zero/.fluxbox/startup
        force: yes
        owner: zero
        group: zero

    - name: get startup sound
      get_url:
        url: "{{gitpath}}fluxbox/ubuntu_startup.wav"
        dest: /home/zero/.fluxbox/ubuntu_startup.wav
        force: yes
        owner: zero
        group: zero

    - name: get background picture
      get_url:
        url: "{{gitpath}}fluxbox/wp.jpg"
        dest: /home/zero/.fluxbox/wp.jpg
        force: yes
        owner: zero
        group: zero

    # INSTALL PULSEAUDIO
    - name: install PulseAudio
      apt:
        name:
          - pulseaudio
          - pavucontrol
          - alsa-base
          - alsa-utils
          - linux-sound-base
          - libasound2
        state: latest

    - name: Ensure gnupg and update-manager-core is installed.
      apt:
        name:
          - xterm
          - update-manager-core
          - gnupg
        state: present

    # INSTALL AND CONFIGURE CONKY
    - name: install conky
      apt:
        name: conky
        state: latest

    - name: get conky config
      get_url:
        url: "{{gitpath}}fluxbox/concyrc.lua"
        dest: /home/zero/.config/conkyrc
        force: yes
        owner: zero
        group: zero

    # INSTALL AND CONFIGURE WORKSPACES
    - name: Add apt key for workspaces repo
      apt_key:
        url: https://workspaces-client-linux-public-key.s3-us-west-2.amazonaws.com/ADB332E7.asc
        state: present

    - name: Add workspaces repo
      apt_repository:
        repo: deb [arch=amd64] https://d3nt0h4h6pmmc4.cloudfront.net/ubuntu bionic main
        filename: amazon-workspaces-clients
        update_cache: yes
        state: present
      when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == '18.04'

    - name: Add workspaces repo
      apt_repository:
        repo: deb [arch=amd64] https://d3nt0h4h6pmmc4.cloudfront.net/ubuntu focal main
        filename: amazon-workspaces-clients
        update_cache: yes
        state: present
      when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == '20.04'

    - name: Install workspaces
      apt:
        name: workspacesclient
        state: latest

        #- name: Install workspaces
        #apt:
        #deb: http://storage01.technolink.org:8080/payload/zero/workspacesclient_4.5.0.2006_amd64.deb
        #force: True
        #state: present

    #PARSEC Requirement
    - name: Install requirements for Parsec
      apt:
        name:
          - libqt5x11extras5
        state: latest

    - name: Install Parsec
      apt:
        deb: https://builds.parsec.app/package/parsec-linux.deb
        state: present
        force: True
      when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == '20.04'

    - name: get .bash_profile
      get_url:
        url: "{{gitpath}}fluxbox/.bash_profile"
        dest: /home/zero/.bash_profile
        force: yes
        owner: zero
        group: zero

    # ------------------------------------------------------------------------------------------------------------------
    # NETWORK CONFIG
    # ------------------------------------------------------------------------------------------------------------------
    - stat:
        path: /root/install-complete
      register: install

    - name: mark traffic through ip tables
      iptables:
        chain: OUTPUT
        jump: DSCP
        table: mangle
        set_dscp_mark_class: CS5
        protocol: tcp
      when: install.stat.exists

    # CONFIGURE DHCP
    - name: configure DHCP
      lineinfile:
        path: /etc/netplan/01-netcfg.yaml
        line: '      dhcp-identifier: mac'

    # MIGRATE TO BOOT SCRIPT
    # CONFIGURE HOST NAME
    - name: Set Hostname
      hostname:
        name: zero-{{ ansible_default_ipv4.macaddress | hwaddr('bare') }}

    - name: mark installation complete
      file:
        path: /root/install-complete
        state: touch
      when: not install.stat.exists

    - name: get ansible cron
      get_url:
        url: "{{gitpath}}ansible/ansible-cron.sh"
        dest: /etc/cron.hourly/ansible
        force: yes
        owner: root
        group: root
        mode: a+x
      when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == '18.04'

    - name: Run do-release-upgrade non-interactively.
      shell: do-release-upgrade -f DistUpgradeViewNonInteractive
      when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == '18.04'
