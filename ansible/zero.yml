---
- name: "configure zero client"
  hosts: localhost
  connection: local
  gather_facts: yes

  handlers:
    - name: Reload systemd and restart getty@tty1
      ansible.builtin.systemd:
        daemon_reload: yes
        name: getty@tty1
        state: restarted

    - name: Reload systemd
      ansible.builtin.systemd:
        daemon_reload: yes

    - name: Apply netplan configuration
      ansible.builtin.command:
        cmd: netplan apply
      when: not in_chroot.stat.exists

    - name: Reboot
      command: reboot
      when: not in_chroot.stat.exists

  tasks:
    - name: Check if we are in chroot
      ansible.builtin.stat:
        path: /root/in_chroot
      register: in_chroot

    # ------------------------------------------------------------------------------------------------------------------
    # UPDATE AND CLEANUP APT
    # ------------------------------------------------------------------------------------------------------------------
    - name: Add the Universe repository
      ansible.builtin.apt_repository:
        repo: 'deb http://archive.ubuntu.com/ubuntu {{ ansible_distribution_release }} universe'
        state: present
        update_cache: yes

    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: yes

    - name: Upgrade all packages to the latest version
      ansible.builtin.apt:
        name: "*"
        state: latest

    - name: Install/upgrade wget
      ansible.builtin.apt:
        name: wget
        state: latest

    - name: Remove useless packages from the cache and purge
      ansible.builtin.apt:
        autoclean: yes

    - name: Remove dependencies that are no longer required
      ansible.builtin.apt:
        autoremove: yes
        purge: yes

    # ------------------------------------------------------------------------------------------------------------------
    # CONFIGURE TTY AND AUTOLOGIN
    # ------------------------------------------------------------------------------------------------------------------
    - name: Ensure the getty@tty1 override directory exists
      ansible.builtin.file:
        path: /etc/systemd/system/getty@tty1.service.d
        state: directory
        mode: '0755'

    - name: Configure autologin for tty1
      ansible.builtin.copy:
        dest: "/etc/systemd/system/getty@tty1.service.d/override.conf"
        content: |
          [Service]
          ExecStart=
          ExecStart=-/sbin/agetty --autologin zero --noclear %I 38400 linux
        owner: root
        group: root
        mode: '0644'
        force: yes
      notify: Reload systemd and restart getty@tty1

    - name: Disable other TTYs (tty2-tty6)
      ansible.builtin.systemd:
        name: getty@tty{{ item }}
        enabled: no
        masked: yes
        state: stopped
      loop: [2, 3, 4, 5, 6]
      notify: Reload systemd

    # ------------------------------------------------------------------------------------------------------------------
    # NETWORK CONFIG
    # ------------------------------------------------------------------------------------------------------------------
    - name: Create Netplan configuration for DHCP
      ansible.builtin.copy:
        dest: /etc/netplan/01-dhcp.yaml
        content: |
          network:
            version: 2
            renderer: networkd
            ethernets:
              primary:
                match:
                  name: en*
                dhcp4: true
                dhcp-identifier: mac
        owner: root
        group: root
        mode: '0644'
        force: yes
      notify: Apply netplan configuration

    - name: Install basic network debugging tools
      ansible.builtin.apt:
        name:
          - iptables
          - dnsutils
          - iputils-ping
          - traceroute
          - net-tools
          - tcpdump
        state: latest

    - name: mark traffic through ip tables
      ansible.builtin.iptables:
        chain: OUTPUT
        jump: DSCP
        table: mangle
        set_dscp_mark_class: CS5
        protocol: tcp
      when: not in_chroot.stat.exists

    - name: Update hostname
      # TODO: FIX ME WITH LATEST BRANCH NAME OR SOME VERSION ?
      ansible.builtin.hostname:
        name: "ZC-DEV"

    # ------------------------------------------------------------------------------------------------------------------
    # OPENBOX AND GUI INSTALLATION
    # ------------------------------------------------------------------------------------------------------------------
    - name: Install X Window System, Openbox, and additional utilities
      ansible.builtin.apt:
        name:
          - xorg
          - openbox
          - stterm
          - x11-xserver-utils
          - xinit
          - picom
          - nodejs
          - conky
          - feh
        state: present


    - name: Install audio software
      ansible.builtin.apt:
        name:
          - pulseaudio
          - pavucontrol
          - alsa-base
          - alsa-utils
          - linux-sound-base
          - libasound2
        state: latest

    - name: Check if .bash_profile exists
      ansible.builtin.stat:
        path: "/home/zero/.bash_profile"
      register: bash_profile

    - name: Replace .bash_profile with X server start script if contents are different
      ansible.builtin.copy:
        dest: "/home/zero/.bash_profile"
        content: |
          if [[ -z $DISPLAY ]] && [[ $(tty) = /dev/tty1 ]]; then
              startx
          fi
        owner: zero
        group: zero
        mode: '0644'
        force: yes

    - name: Configure .xinitrc to start Openbox
      ansible.builtin.copy:
        dest: "/home/zero/.xinitrc"
        content: "exec openbox-session\n"
        mode: '0644'
        owner: zero
        group: zero
        force: yes

    # ------------------------------------------------------------------------------------------------------------------
    # WORKSPACE CONFIG
    # ------------------------------------------------------------------------------------------------------------------
    - name: Create required directories for zero user
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        owner: zero
        group: zero
      loop: [
        "/home/zero/.config",
        "/home/zero/.config/openbox",
        "/home/zero/Downloads",
      ]

    - name: Get workspace configs
      ansible.builtin.get_url:
        url: "https://raw.githubusercontent.com/techno-link/zero-client/dev/openbox/{{ item.file }}"
        dest: "{{ item.dest }}"
        force: yes
        owner: zero
        group: zero
        mode: "{{ item.mode | default(omit) }}"
      loop:
        - { file: 'rc.xml', dest: '/home/zero/.config/openbox/rc.xml' }
        - { file: 'menu.xml', dest: '/home/zero/.config/openbox/menu.xml' }
        - { file: 'audio-menu.js', dest: '/home/zero/.config/openbox/audio-menu.js', mode: '0755' }
        - { file: 'autostart.sh', dest: '/home/zero/.config/openbox/autostart', mode: '0755' }
        - { file: 'conkyrc.lua', dest: '/home/zero/.config/conky/conkyrc' }
        - { file: 'wallpaper.jpg', dest: '/home/zero/.config/openbox/wallpaper.jpg' }
      notify: Reboot

    # ------------------------------------------------------------------------------------------------------------------
    # AWS WORKSPACES CLIENT INSTALL
    # ------------------------------------------------------------------------------------------------------------------
    - name: Download the AWS Workspaces package if it has been updated
      ansible.builtin.get_url:
        url: https://d3nt0h4h6pmmc4.cloudfront.net/new_workspacesclient_jammy_amd64.deb
        dest: /home/zero/Downloads/workspace_client.deb
        force: yes
        mode: '0755'

    - name: Install the downloaded AWS Workspaces package
      ansible.builtin.apt:
        deb: /home/zero/Downloads/workspace_client.deb

    # ------------------------------------------------------------------------------------------------------------------
    # PARSEC CLIENT INSTALL
    # ------------------------------------------------------------------------------------------------------------------
    - name: Install requirements for Parsec
      ansible.builtin.apt:
        name:
          - libqt5x11extras5
          - chromium-browser
        state: latest

    - name: Download the Parsec package if it has been updated
      ansible.builtin.get_url:
        url: https://builds.parsec.app/package/parsec-linux.deb
        dest: /home/zero/Downloads/parsec-linux.deb
        force: yes
        mode: '0755'

    - name: Install the downloaded Parsec package
      ansible.builtin.apt:
        deb: /home/zero/Downloads/parsec-linux.deb
